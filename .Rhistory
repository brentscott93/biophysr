annotate(geom = "text", x = 55000, y = -1.2, color = "black", label = paste("Diff = ", round(mean(cal$V1[51000:58000]) - mean(cal$V1[42000:50000]), 2)), size = 7)+
annotate(geom = "text", x = 66000, y = -0.9, color = "black", label = paste("Diff = ", round(mean(cal$V1[62000:75000]) - mean(cal$V1[51000:58000]), 2)), size = 7)+
ggtitle(paste("100nm steps corresponded to ~", round(mean(c(
abs(mean(cal$V1[25001:35000]) - mean(cal$V1[1:25000])),
abs(mean(cal$V1[36000:40000]) - mean(cal$V1[25001:35000])),
abs(mean(cal$V1[42000:50000]) - mean(cal$V1[36000:40000])),
abs(mean(cal$V1[51000:58000]) - mean(cal$V1[42000:50000])),
abs(mean(cal$V1[62000:75000]) - mean(cal$V1[51000:58000])))
), 2),
"change in mV. This equals ~",
round(100/mean(c(
abs(mean(cal$V1[25001:35000]) - mean(cal$V1[1:25000])),
abs(mean(cal$V1[36000:40000]) - mean(cal$V1[25001:35000])),
abs(mean(cal$V1[42000:50000]) - mean(cal$V1[36000:40000])),
abs(mean(cal$V1[51000:58000]) - mean(cal$V1[42000:50000])),
abs(mean(cal$V1[62000:75000]) - mean(cal$V1[51000:58000])))
), 0),
"nm/mV"
))+
theme_bw()
ggplot()+
geom_line(aes(x = time(cal$V1), y = cal$V1))+
#start
geom_line(aes(x = 1:25000, y = mean(cal$V1[1:25000])), color = "red")+
annotate(geom = "text", x = 10000, y = (0.05 + mean(cal$V1[1:25000])), color = "red", label = round(mean(cal$V1[1:25000]), 2))+
#step 1
geom_line(aes(x = 25001:35000, y = mean(cal$V1[25001:35000])), color = "green")+
annotate(geom = "text", x = 27000, y = (0.05 + mean(cal$V1[25001:35000])), color = "green", label = round(mean(cal$V1[25001:35000]), 2))+
#step 2
geom_line(aes(x = 36000:40000, y = mean(cal$V1[36000:40000])), color = "yellow")+
annotate(geom = "text", x = 37000, y = (0.05 + mean(cal$V1[36000:40000])), color = "yellow", label = round(mean(cal$V1[36000:40000]), 2))+
#step 3
geom_line(aes(x = 42000:50000, y = mean(cal$V1[42000:50000])), color = "skyblue")+
annotate(geom = "text", x = 45000, y = (0.05 + mean(cal$V1[42000:50000])), color = "skyblue", label = round(mean(cal$V1[42000:50000]), 2))+
#step 4
geom_line(aes(x = 51000:58000, y = mean(cal$V1[51000:58000])), color = "pink")+
annotate(geom = "text", x = 53000, y = (0.05 + mean(cal$V1[51000:58000])), color = "pink", label = round(mean(cal$V1[51000:58000]), 2))+
#step 5
geom_line(aes(x = 62000:75000, y = mean(cal$V1[62000:75000])), color = "orange")+
annotate(geom = "text", x = 65000, y = (0.05 + mean(cal$V1[62000:75000])), color = "orange", label = round(mean(cal$V1[62000:75000]), 2))+
#math
annotate(geom = "text", x = 15000, y = -1, color = "black", label = paste("Diff = ", round(mean(cal$V1[25001:35000]) - mean(cal$V1[1:25000]), 2)), size = 7)+
annotate(geom = "text", x = 20000, y = -1.35, color = "black", label = paste("Diff = ", round(mean(cal$V1[36000:40000]) - mean(cal$V1[25001:35000]), 2)), size = 7)+
annotate(geom = "text", x = 43000, y = -1.5, color = "black", label = paste("Diff = ", round(mean(cal$V1[42000:50000]) - mean(cal$V1[36000:40000]), 2)), size = 7)+
annotate(geom = "text", x = 55000, y = -1.2, color = "black", label = paste("Diff = ", round(mean(cal$V1[51000:58000]) - mean(cal$V1[42000:50000]), 2)), size = 7)+
annotate(geom = "text", x = 66000, y = -0.9, color = "black", label = paste("Diff = ", round(mean(cal$V1[62000:75000]) - mean(cal$V1[51000:58000]), 2)), size = 7)+
ggtitle(paste("100nm steps corresponded to ~", round(mean(c(
abs(mean(cal$V1[25001:35000]) - mean(cal$V1[1:25000])),
abs(mean(cal$V1[36000:40000]) - mean(cal$V1[25001:35000])),
abs(mean(cal$V1[42000:50000]) - mean(cal$V1[36000:40000])),
abs(mean(cal$V1[51000:58000]) - mean(cal$V1[42000:50000])),
abs(mean(cal$V1[62000:75000]) - mean(cal$V1[51000:58000])))
), 2),
"change in mV. This equals ~",
round(100/round(mean(c(
abs(mean(cal$V1[25001:35000]) - mean(cal$V1[1:25000])),
abs(mean(cal$V1[36000:40000]) - mean(cal$V1[25001:35000])),
abs(mean(cal$V1[42000:50000]) - mean(cal$V1[36000:40000])),
abs(mean(cal$V1[51000:58000]) - mean(cal$V1[42000:50000])),
abs(mean(cal$V1[62000:75000]) - mean(cal$V1[51000:58000])))
), 2), 0),
"nm/mV"
))+
theme_bw()
ggplot()+
geom_line(aes(x = time(cal$V1), y = cal$V1))+
#start
geom_line(aes(x = 1:25000, y = mean(cal$V1[1:25000])), color = "red")+
annotate(geom = "text", x = 10000, y = (0.05 + mean(cal$V1[1:25000])), color = "red", label = round(mean(cal$V1[1:25000]), 2))+
#step 1
geom_line(aes(x = 25001:35000, y = mean(cal$V1[25001:35000])), color = "green")+
annotate(geom = "text", x = 27000, y = (0.05 + mean(cal$V1[25001:35000])), color = "green", label = round(mean(cal$V1[25001:35000]), 2))+
#step 2
geom_line(aes(x = 36000:40000, y = mean(cal$V1[36000:40000])), color = "yellow")+
annotate(geom = "text", x = 37000, y = (0.05 + mean(cal$V1[36000:40000])), color = "yellow", label = round(mean(cal$V1[36000:40000]), 2))+
#step 3
geom_line(aes(x = 42000:50000, y = mean(cal$V1[42000:50000])), color = "skyblue")+
annotate(geom = "text", x = 45000, y = (0.05 + mean(cal$V1[42000:50000])), color = "skyblue", label = round(mean(cal$V1[42000:50000]), 2))+
#step 4
geom_line(aes(x = 51000:58000, y = mean(cal$V1[51000:58000])), color = "pink")+
annotate(geom = "text", x = 53000, y = (0.05 + mean(cal$V1[51000:58000])), color = "pink", label = round(mean(cal$V1[51000:58000]), 2))+
#step 5
geom_line(aes(x = 62000:75000, y = mean(cal$V1[62000:75000])), color = "orange")+
annotate(geom = "text", x = 65000, y = (0.05 + mean(cal$V1[62000:75000])), color = "orange", label = round(mean(cal$V1[62000:75000]), 2))+
#math
annotate(geom = "text", x = 15000, y = -1, color = "black", label = paste("Diff = ", round(mean(cal$V1[25001:35000]) - mean(cal$V1[1:25000]), 2)), size = 7)+
annotate(geom = "text", x = 20000, y = -1.35, color = "black", label = paste("Diff = ", round(mean(cal$V1[36000:40000]) - mean(cal$V1[25001:35000]), 2)), size = 7)+
annotate(geom = "text", x = 43000, y = -1.5, color = "black", label = paste("Diff = ", round(mean(cal$V1[42000:50000]) - mean(cal$V1[36000:40000]), 2)), size = 7)+
annotate(geom = "text", x = 55000, y = -1.2, color = "black", label = paste("Diff = ", round(mean(cal$V1[51000:58000]) - mean(cal$V1[42000:50000]), 2)), size = 7)+
annotate(geom = "text", x = 66000, y = -0.9, color = "black", label = paste("Diff = ", round(mean(cal$V1[62000:75000]) - mean(cal$V1[51000:58000]), 2)), size = 7)+
ggtitle(paste("100nm steps corresponded to ~", round(mean(c(
abs(mean(cal$V1[25001:35000]) - mean(cal$V1[1:25000])),
abs(mean(cal$V1[36000:40000]) - mean(cal$V1[25001:35000])),
abs(mean(cal$V1[42000:50000]) - mean(cal$V1[36000:40000])),
abs(mean(cal$V1[51000:58000]) - mean(cal$V1[42000:50000])),
abs(mean(cal$V1[62000:75000]) - mean(cal$V1[51000:58000])))
), 2),
"change in mV signal. 100nm / 0.3 mV equals ~",
round(100/round(mean(c(
abs(mean(cal$V1[25001:35000]) - mean(cal$V1[1:25000])),
abs(mean(cal$V1[36000:40000]) - mean(cal$V1[25001:35000])),
abs(mean(cal$V1[42000:50000]) - mean(cal$V1[36000:40000])),
abs(mean(cal$V1[51000:58000]) - mean(cal$V1[42000:50000])),
abs(mean(cal$V1[62000:75000]) - mean(cal$V1[51000:58000])))
), 2), 0),
"nm/mV"
))+
theme_bw()
ggplot()+
geom_line(aes(x = time(cal$V1), y = cal$V1))+
#start
geom_line(aes(x = 1:25000, y = mean(cal$V1[1:25000])), color = "red")+
annotate(geom = "text", x = 10000, y = (0.05 + mean(cal$V1[1:25000])), color = "red", label = round(mean(cal$V1[1:25000]), 2))+
#step 1
geom_line(aes(x = 25001:35000, y = mean(cal$V1[25001:35000])), color = "green")+
annotate(geom = "text", x = 27000, y = (0.05 + mean(cal$V1[25001:35000])), color = "green", label = round(mean(cal$V1[25001:35000]), 2))+
#step 2
geom_line(aes(x = 36000:40000, y = mean(cal$V1[36000:40000])), color = "yellow")+
annotate(geom = "text", x = 37000, y = (0.05 + mean(cal$V1[36000:40000])), color = "yellow", label = round(mean(cal$V1[36000:40000]), 2))+
#step 3
geom_line(aes(x = 42000:50000, y = mean(cal$V1[42000:50000])), color = "skyblue")+
annotate(geom = "text", x = 45000, y = (0.05 + mean(cal$V1[42000:50000])), color = "skyblue", label = round(mean(cal$V1[42000:50000]), 2))+
#step 4
geom_line(aes(x = 51000:58000, y = mean(cal$V1[51000:58000])), color = "pink")+
annotate(geom = "text", x = 53000, y = (0.05 + mean(cal$V1[51000:58000])), color = "pink", label = round(mean(cal$V1[51000:58000]), 2))+
#step 5
geom_line(aes(x = 62000:75000, y = mean(cal$V1[62000:75000])), color = "orange")+
annotate(geom = "text", x = 65000, y = (0.05 + mean(cal$V1[62000:75000])), color = "orange", label = round(mean(cal$V1[62000:75000]), 2))+
#math
annotate(geom = "text", x = 15000, y = -1, color = "black", label = paste("Diff = ", round(mean(cal$V1[25001:35000]) - mean(cal$V1[1:25000]), 2)), size = 7)+
annotate(geom = "text", x = 20000, y = -1.35, color = "black", label = paste("Diff = ", round(mean(cal$V1[36000:40000]) - mean(cal$V1[25001:35000]), 2)), size = 7)+
annotate(geom = "text", x = 43000, y = -1.5, color = "black", label = paste("Diff = ", round(mean(cal$V1[42000:50000]) - mean(cal$V1[36000:40000]), 2)), size = 7)+
annotate(geom = "text", x = 55000, y = -1.2, color = "black", label = paste("Diff = ", round(mean(cal$V1[51000:58000]) - mean(cal$V1[42000:50000]), 2)), size = 7)+
annotate(geom = "text", x = 66000, y = -0.9, color = "black", label = paste("Diff = ", round(mean(cal$V1[62000:75000]) - mean(cal$V1[51000:58000]), 2)), size = 7)+
ggtitle(paste("100nm steps corresponded to ~", round(mean(c(
abs(mean(cal$V1[25001:35000]) - mean(cal$V1[1:25000])),
abs(mean(cal$V1[36000:40000]) - mean(cal$V1[25001:35000])),
abs(mean(cal$V1[42000:50000]) - mean(cal$V1[36000:40000])),
abs(mean(cal$V1[51000:58000]) - mean(cal$V1[42000:50000])),
abs(mean(cal$V1[62000:75000]) - mean(cal$V1[51000:58000])))
), 2),
"change in mV signal. 100nm / 0.3 mV equals ~",
round(100/round(mean(c(
abs(mean(cal$V1[25001:35000]) - mean(cal$V1[1:25000])),
abs(mean(cal$V1[36000:40000]) - mean(cal$V1[25001:35000])),
abs(mean(cal$V1[42000:50000]) - mean(cal$V1[36000:40000])),
abs(mean(cal$V1[51000:58000]) - mean(cal$V1[42000:50000])),
abs(mean(cal$V1[62000:75000]) - mean(cal$V1[51000:58000])))
), 2), 0),
"nm/mV"
))+
xlab("Data Points")+
ylab("mV")+
theme_bw()
setwd("~/Desktop")
ggsave()
ggsave("trap_calibration.png")
ggsave("trap_calibration.png", height = 10, width  = 12, units = "cm")
ggplot()+
geom_line(aes(x = time(cal$V1), y = cal$V1))+
#start
geom_line(aes(x = 1:25000, y = mean(cal$V1[1:25000])), color = "red")+
annotate(geom = "text", x = 10000, y = (0.05 + mean(cal$V1[1:25000])), color = "red", label = round(mean(cal$V1[1:25000]), 2))+
#step 1
geom_line(aes(x = 25001:35000, y = mean(cal$V1[25001:35000])), color = "green")+
annotate(geom = "text", x = 27000, y = (0.05 + mean(cal$V1[25001:35000])), color = "green", label = round(mean(cal$V1[25001:35000]), 2))+
#step 2
geom_line(aes(x = 36000:40000, y = mean(cal$V1[36000:40000])), color = "yellow")+
annotate(geom = "text", x = 37000, y = (0.05 + mean(cal$V1[36000:40000])), color = "yellow", label = round(mean(cal$V1[36000:40000]), 2))+
#step 3
geom_line(aes(x = 42000:50000, y = mean(cal$V1[42000:50000])), color = "skyblue")+
annotate(geom = "text", x = 45000, y = (0.05 + mean(cal$V1[42000:50000])), color = "skyblue", label = round(mean(cal$V1[42000:50000]), 2))+
#step 4
geom_line(aes(x = 51000:58000, y = mean(cal$V1[51000:58000])), color = "pink")+
annotate(geom = "text", x = 53000, y = (0.05 + mean(cal$V1[51000:58000])), color = "pink", label = round(mean(cal$V1[51000:58000]), 2))+
#step 5
geom_line(aes(x = 62000:75000, y = mean(cal$V1[62000:75000])), color = "orange")+
annotate(geom = "text", x = 65000, y = (0.05 + mean(cal$V1[62000:75000])), color = "orange", label = round(mean(cal$V1[62000:75000]), 2))+
#math
annotate(geom = "text", x = 15000, y = -1, color = "black", label = paste("Diff = ", round(mean(cal$V1[25001:35000]) - mean(cal$V1[1:25000]), 2)), size = 7)+
annotate(geom = "text", x = 20000, y = -1.35, color = "black", label = paste("Diff = ", round(mean(cal$V1[36000:40000]) - mean(cal$V1[25001:35000]), 2)), size = 7)+
annotate(geom = "text", x = 43000, y = -1.5, color = "black", label = paste("Diff = ", round(mean(cal$V1[42000:50000]) - mean(cal$V1[36000:40000]), 2)), size = 7)+
annotate(geom = "text", x = 55000, y = -1.2, color = "black", label = paste("Diff = ", round(mean(cal$V1[51000:58000]) - mean(cal$V1[42000:50000]), 2)), size = 7)+
annotate(geom = "text", x = 66000, y = -0.9, color = "black", label = paste("Diff = ", round(mean(cal$V1[62000:75000]) - mean(cal$V1[51000:58000]), 2)), size = 7)+
ggtitle(paste("100nm steps corresponded to ~", round(mean(c(
abs(mean(cal$V1[25001:35000]) - mean(cal$V1[1:25000])),
abs(mean(cal$V1[36000:40000]) - mean(cal$V1[25001:35000])),
abs(mean(cal$V1[42000:50000]) - mean(cal$V1[36000:40000])),
abs(mean(cal$V1[51000:58000]) - mean(cal$V1[42000:50000])),
abs(mean(cal$V1[62000:75000]) - mean(cal$V1[51000:58000])))
), 2),
"change in mV signal. 100nm / 0.3 mV equals ~",
round(100/round(mean(c(
abs(mean(cal$V1[25001:35000]) - mean(cal$V1[1:25000])),
abs(mean(cal$V1[36000:40000]) - mean(cal$V1[25001:35000])),
abs(mean(cal$V1[42000:50000]) - mean(cal$V1[36000:40000])),
abs(mean(cal$V1[51000:58000]) - mean(cal$V1[42000:50000])),
abs(mean(cal$V1[62000:75000]) - mean(cal$V1[51000:58000])))
), 2), 0),
"nm/mV"
))+
xlab("Data Points")+
ylab("mV")+
theme_bw()
ggplot()+
geom_line(aes(x = time(cal$V1), y = cal$V1))+
#start
geom_line(aes(x = 1:25000, y = mean(cal$V1[1:25000])), color = "red")+
annotate(geom = "text", x = 10000, y = (0.05 + mean(cal$V1[1:25000])), color = "red", label = round(mean(cal$V1[1:25000]), 2))+
#step 1
geom_line(aes(x = 25001:35000, y = mean(cal$V1[25001:35000])), color = "green")+
annotate(geom = "text", x = 27000, y = (0.05 + mean(cal$V1[25001:35000])), color = "green", label = round(mean(cal$V1[25001:35000]), 2))+
#step 2
geom_line(aes(x = 36000:40000, y = mean(cal$V1[36000:40000])), color = "yellow")+
annotate(geom = "text", x = 37000, y = (0.05 + mean(cal$V1[36000:40000])), color = "yellow", label = round(mean(cal$V1[36000:40000]), 2))+
#step 3
geom_line(aes(x = 42000:50000, y = mean(cal$V1[42000:50000])), color = "skyblue")+
annotate(geom = "text", x = 45000, y = (0.05 + mean(cal$V1[42000:50000])), color = "skyblue", label = round(mean(cal$V1[42000:50000]), 2))+
#step 4
geom_line(aes(x = 51000:58000, y = mean(cal$V1[51000:58000])), color = "pink")+
annotate(geom = "text", x = 53000, y = (0.05 + mean(cal$V1[51000:58000])), color = "pink", label = round(mean(cal$V1[51000:58000]), 2))+
#step 5
geom_line(aes(x = 62000:75000, y = mean(cal$V1[62000:75000])), color = "orange")+
annotate(geom = "text", x = 65000, y = (0.05 + mean(cal$V1[62000:75000])), color = "orange", label = round(mean(cal$V1[62000:75000]), 2))+
#math
annotate(geom = "text", x = 15000, y = -1, color = "black", label = paste("Diff = ", round(mean(cal$V1[25001:35000]) - mean(cal$V1[1:25000]), 2)), size = 7)+
annotate(geom = "text", x = 20000, y = -1.35, color = "black", label = paste("Diff = ", round(mean(cal$V1[36000:40000]) - mean(cal$V1[25001:35000]), 2)), size = 7)+
annotate(geom = "text", x = 43000, y = -1.5, color = "black", label = paste("Diff = ", round(mean(cal$V1[42000:50000]) - mean(cal$V1[36000:40000]), 2)), size = 7)+
annotate(geom = "text", x = 55000, y = -1.2, color = "black", label = paste("Diff = ", round(mean(cal$V1[51000:58000]) - mean(cal$V1[42000:50000]), 2)), size = 7)+
annotate(geom = "text", x = 66000, y = -0.9, color = "black", label = paste("Diff = ", round(mean(cal$V1[62000:75000]) - mean(cal$V1[51000:58000]), 2)), size = 7)+
ggtitle(paste("100nm steps corresponded to ~", round(mean(c(
abs(mean(cal$V1[25001:35000]) - mean(cal$V1[1:25000])),
abs(mean(cal$V1[36000:40000]) - mean(cal$V1[25001:35000])),
abs(mean(cal$V1[42000:50000]) - mean(cal$V1[36000:40000])),
abs(mean(cal$V1[51000:58000]) - mean(cal$V1[42000:50000])),
abs(mean(cal$V1[62000:75000]) - mean(cal$V1[51000:58000])))
), 2),
"change in mV signal. 100nm / 0.3 mV equals ~",
round(100/round(mean(c(
abs(mean(cal$V1[25001:35000]) - mean(cal$V1[1:25000])),
abs(mean(cal$V1[36000:40000]) - mean(cal$V1[25001:35000])),
abs(mean(cal$V1[42000:50000]) - mean(cal$V1[36000:40000])),
abs(mean(cal$V1[51000:58000]) - mean(cal$V1[42000:50000])),
abs(mean(cal$V1[62000:75000]) - mean(cal$V1[51000:58000])))
), 2), 0),
"nm/mV"
))+
xlab("Data Points")+
ylab("mV")+
theme_bw()
ggsave("trap_calibration.png")
s3 <- read_csv("/Users/brentscott/Downloads/KIN110-SEC03 FA19 Grades-20191222_2122-comma_separated.csv")
View(s3)
s3 <- read_csv("/Users/brentscott/Downloads/KIN110-SEC03 FA19 Grades-20191222_2122-comma_separated.csv") %>%
select("ID Number", starts_with("Lecture"))
View(s3)
s3 <- read_csv("/Users/brentscott/Downloads/KIN110-SEC03 FA19 Grades-20191222_2122-comma_separated.csv") %>%
dplyr::select("ID Number", starts_with("Lecture"))
s3 <- read_csv("/Users/brentscott/Downloads/KIN110-SEC03 FA19 Grades-20191222_2122-comma_separated.csv") %>%
dplyr::select("ID number", starts_with("Lecture"))
View(s3)
View(s3)
s3 <- s3 %>% mutate(adjusted_iclicker = rowMeans(s3[2:13]))
View(s3)
?read_csv
?replace_na
s3 <- read_csv("/Users/brentscott/Downloads/KIN110-SEC03 FA19 Grades-20191222_2122-comma_separated.csv", ) %>%
replace_na(0) %>%
dplyr::select("ID number", starts_with("Lecture"))
View(s3)
s3 <- read_csv("/Users/brentscott/Downloads/KIN110-SEC03 FA19 Grades-20191222_2122-comma_separated.csv", na = "-") %>%
replace_na(0) %>%
dplyr::select("ID number", starts_with("Lecture"))
s3 <- read_csv("/Users/brentscott/Downloads/KIN110-SEC03 FA19 Grades-20191222_2122-comma_separated.csv", na = "-")
View(cal)
View(s3)
s3 <- read_csv("/Users/brentscott/Downloads/KIN110-SEC03 FA19 Grades-20191222_2122-comma_separated.csv", na = c("-", " ", "", "NA"))
s3 <- read_csv("/Users/brentscott/Downloads/KIN110-SEC03 FA19 Grades-20191222_2122-comma_separated.csv", na = c("-", " ", "", "NA")) %>%
dplyr::select("ID number", starts_with("Lecture"))
View(s3)
s3 <- s3 %>% mutate(adjusted_iclicker = rowMeans(s3[2:13]))
View(s3)
s3 <- read_csv("/Users/brentscott/Downloads/KIN110-SEC03 FA19 Grades-20191222_2122-comma_separated.csv", na = c("-", " ", "", "NA")) %>%
dplyr::select("ID number", starts_with("Lecture")) %>%
replace_na(0)
s3[is.na(s3)] <- 0
s3 <- s3 %>% mutate(adjusted_iclicker = rowMeans(s3[2:13]))
View(s3)
10/13
12/13
11/13
?rowMeans
s3 <- s3 %>% mutate(adjusted_iclicker = rowMeans(s3[2:13]),
sum = sum(s3[2:13]))
View(s3)
s3[2:13]
View(s3)
11/13
6/13
mean(s3[starts_with("Lecture")])
s3 <- s3 %>% mutate(adjusted_iclicker = rowSums(s3[2:13]))
View(s3)
s3 <- s3 %>% mutate(adjusted_iclicker = rowMeans(s3[2:14]))
View(cal)
View(s3)
11/13
s3 <- read_csv("/Users/brentscott/Downloads/KIN110-SEC03 FA19 Grades-20191222_2122-comma_separated.csv", na = c("-", " ", "", "NA")) %>%
dplyr::select("ID number", starts_with("Lecture"))
s3[is.na(s3)] <- 0
s3 <- s3 %>% mutate(adjusted_iclicker = rowMeans(s3[2:14]))
s3$adjusted_iclicker = s3$adjusted_iclicker * 100 + 20
s3$adjusted_iclicker[s3$adjusted_iclicker > 100] <- 100
s3 <- s3 %>%
dplyr::select(starts_with("ID"), contains("adjusted"))
View(s3)
setwd("/Users/brentscott/Documents/UMASS/KIN 110")
write.csv(s3, "s3_attendance.csv")
s2 <- read_csv("/Users/brentscott/Downloads/KIN110-SEC02 FA19 Grades-20191222_2147-comma_separated.csv", na = c("-", " ", "", "NA")) %>%
dplyr::select("ID number", starts_with("Lecture"))
s2[is.na(s2)] <- 0
s2[is.na(s2)] <- 0
View(s2)
s2 <- s2 %>% mutate(adjusted_iclicker = rowMeans(s2[2:15]))
s2$adjusted_iclicker = s2$adjusted_iclicker * 100 + 20
s2$adjusted_iclicker[s2$adjusted_iclicker > 100] <- 100
s2 <- s2 %>%
dplyr::select(starts_with("ID"), contains("adjusted"))
write.csv(s2, "s2_attendance.csv")
s2 <- read_csv("/Users/brentscott/Downloads/KIN110-SEC01 FA19 Grades-20191222_2149-comma_separated.csv", na = c("-", " ", "", "NA")) %>%
dplyr::select("ID number", starts_with("Lecture"))
s2[is.na(s2)] <- 0
s2 <- s2 %>% mutate(adjusted_iclicker = rowMeans(s2[2:15]))
s2$adjusted_iclicker = s2$adjusted_iclicker * 100 + 20
s2$adjusted_iclicker[s2$adjusted_iclicker > 100] <- 100
s2 <- s2 %>%
dplyr::select(starts_with("ID"), contains("adjusted"))
write.csv(s2, "s1_attendance.csv")
s2 <- read_csv("/Users/brentscott/Downloads/KIN110-SEC03 FA19 Grades-20191222_2208-comma_separated.csv", na = c("-", " ", "", "NA"))
tests <- read_csv("/Users/brentscott/Downloads/KIN110-SEC03 FA19 Grades-20191222_2208-comma_separated.csv", na = c("-", " ", "", "NA"))
View(tests)
tests <- read_csv("/Users/brentscott/Downloads/KIN110-SEC03 FA19 Grades-20191222_2209-comma_separated.csv", na = c("-", " ", "", "NA"))
View(tests)
exam1 <- tests$`Quiz:Exam 1_TEAM Qs 1-10 (Real)` + tests$`Quiz:Exam 1- INDIVIDUAL Qs 11-50 (Real)`
View(tests)
exam1 <- tibble("ID number" = tests$`ID number`
exam1 <- tests$`Quiz:Exam 1_TEAM Qs 1-10 (Real)` + tests$`Quiz:Exam 1- INDIVIDUAL Qs 11-50 (Real)`)
exam1 <- tibble("ID number" = tests$`ID number`,
exam1 <- tests$`Quiz:Exam 1_TEAM Qs 1-10 (Real)` + tests$`Quiz:Exam 1- INDIVIDUAL Qs 11-50 (Real)`)
View(exam1)
exam1 <- tibble("ID number" = tests$`ID number`,
exam1 = (tests$`Quiz:Exam 1_TEAM Qs 1-10 (Real)` + tests$`Quiz:Exam 1- INDIVIDUAL Qs 11-50 (Real)`) * 2)
View(exam1)
rest <- tests %>%
select('ID number', 'Quiz:Exam 2 (Percentage)', 'Quiz:Exam 3 (Percentage)', 'Quiz:Final Exam (Percentage)')
View(rest)
head(parse_number(tests$`Quiz:Final Exam (Percentage)`))
exam1 <- tibble("ID number" = tests$`ID number`,
exam1 = (tests$`Quiz:Exam 1_TEAM Qs 1-10 (Real)` + tests$`Quiz:Exam 1- INDIVIDUAL Qs 11-50 (Real)`) * 2,
exam2 = parse_number(tests$`Quiz:Exam 2 (Percentage)`),
exam3 = parse_number(tests$`Quiz:Exam 3 (Percentage)`),
final = parse_number(tests$`Quiz:Final Exam (Percentage)`))
exams <- tibble("ID number" = tests$`ID number`,
exam1 = (tests$`Quiz:Exam 1_TEAM Qs 1-10 (Real)` + tests$`Quiz:Exam 1- INDIVIDUAL Qs 11-50 (Real)`) * 2,
exam2 = parse_number(tests$`Quiz:Exam 2 (Percentage)`),
exam3 = parse_number(tests$`Quiz:Exam 3 (Percentage)`),
final = parse_number(tests$`Quiz:Final Exam (Percentage)`))
View(exams)
exams[is.na(exams)] <- 0
View(exams)
exams <- tibble("ID number" = tests$`ID number`,
exam1 = (tests$`Quiz:Exam 1_TEAM Qs 1-10 (Real)` + tests$`Quiz:Exam 1- INDIVIDUAL Qs 11-50 (Real)`) * 2,
exam2 = parse_number(tests$`Quiz:Exam 2 (Percentage)`),
exam3 = parse_number(tests$`Quiz:Exam 3 (Percentage)`),
final = parse_number(tests$`Quiz:Final Exam (Percentage)`),
Original_Average = rowMeans(exam_dat[2:5]))
exams <- tibble("ID number" = tests$`ID number`,
exam1 = (tests$`Quiz:Exam 1_TEAM Qs 1-10 (Real)` + tests$`Quiz:Exam 1- INDIVIDUAL Qs 11-50 (Real)`) * 2,
exam2 = parse_number(tests$`Quiz:Exam 2 (Percentage)`),
exam3 = parse_number(tests$`Quiz:Exam 3 (Percentage)`),
final = parse_number(tests$`Quiz:Final Exam (Percentage)`),
Original_Average = rowMeans(exams[2:5]))
View(exams)
swap <- exams %>% mutate(       replace_1 = (final + exam2 + exam3 + final)/4,
replace_2 = (exam1 + final + exam3 + final)/4,
replace_3 = (exam1 + exam2 + final + final)/4,
swap_average = pmax(Original_Average, replace_1, replace_2, replace_3),
howd_it_help = (swap_average - Original_Average))
View(swap)
exams <- tibble("ID number" = tests$`ID number`,
exam1 = (tests$`Quiz:Exam 1_TEAM Qs 1-10 (Real)` + tests$`Quiz:Exam 1- INDIVIDUAL Qs 11-50 (Real)`) * 2,
exam2 = parse_number(tests$`Quiz:Exam 2 (Percentage)`),
exam3 = parse_number(tests$`Quiz:Exam 3 (Percentage)`),
final = parse_number(tests$`Quiz:Final Exam (Percentage)`),
Original_Average = rowMeans(exams[2:5]))
exams[is.na(exams)] <- 0
swap <- exams %>% mutate(       replace_1 = (final + exam2 + exam3 + final)/4,
replace_2 = (exam1 + final + exam3 + final)/4,
replace_3 = (exam1 + exam2 + final + final)/4,
swap_average = pmax(Original_Average, replace_1, replace_2, replace_3),
howd_it_help = (swap_average - Original_Average))
View(swap)
write.csv(swap, "s3_examSwap.csv")
tests <- read_csv("/Users/brentscott/Downloads/KIN110-SEC02 FA19 Grades-20191222_2235-comma_separated.csv", na = c("-", " ", "", "NA"))
exams <- tibble("ID number" = tests$`ID number`,
exam1 = (tests$`Quiz:Exam 1_TEAM Qs 1-10 (Real)` + tests$`Quiz:Exam 1- INDIVIDUAL Qs 11-50 (Real)`) * 2,
exam2 = parse_number(tests$`Quiz:Exam 2 (Percentage)`),
exam3 = parse_number(tests$`Quiz:Exam 3 (Percentage)`),
final = parse_number(tests$`Quiz:Final Exam (Percentage)`),
Original_Average = rowMeans(exams[2:5]))
tests <- read_csv("/Users/brentscott/Downloads/KIN110-SEC02 FA19 Grades-20191222_2235-comma_separated.csv", na = c("-", " ", "", "NA"))
exams <- tibble("ID number" = tests$`ID number`,
exam1 = (tests$`Quiz:Exam 1_TEAM Qs 1-10 (Real)` + tests$`Quiz:Exam 1- INDIVIDUAL Qs 11-50 (Real)`) * 2,
exam2 = parse_number(tests$`Quiz:Exam 2 (Percentage)`),
exam3 = parse_number(tests$`Quiz:Exam 3 (Percentage)`),
final = parse_number(tests$`Quiz:Final Exam (Percentage)`),
Original_Average = rowMeans(exams[2:5]))
exams <- tibble("ID number" = tests$`ID number`,
exam1 = (tests$`Quiz:Exam 1_TEAM Qs 1-10 (Real)` + tests$`Quiz:Exam 1- INDIVIDUAL Qs 11-50 (Real)`) * 2,
exam2 = parse_number(tests$`Quiz:Exam 2 (Percentage)`),
exam3 = parse_number(tests$`Quiz:Exam 3 (Percentage)`),
final = parse_number(tests$`Quiz:Final Exam (Percentage)`),
Original_Average = rowMeans(exams[2:5]))
exams <- tibble("ID number" = tests$`ID number`,
exam1 = (tests$`Quiz:Exam 1_TEAM Qs 1-10 (Real)` + tests$`Quiz:Exam 1- INDIVIDUAL Qs 11-50 (Real)`) * 2,
exam2 = parse_number(tests$`Quiz:Exam 2 (Percentage)`),
exam3 = parse_number(tests$`Quiz:Exam 3 (Percentage)`),
final = parse_number(tests$`Quiz:Final Exam (Percentage)`))
exams <- tibble("ID number" = tests$`ID number`,
exam1 = (tests$`Quiz:Exam 1_TEAM Qs 1-10 (Real)` + tests$`Quiz:Exam 1- INDIVIDUAL Qs 11-50 (Real)`) * 2,
exam2 = parse_number(tests$`Quiz:Exam 2 (Percentage)`),
exam3 = parse_number(tests$`Quiz:Exam 3 (Percentage)`),
final = parse_number(tests$`Quiz:Final Exam (Percentage)`),
Original_Average = rowMeans(exams[2:5]))
View(tests)
View(exams)
70+58.82+80+80
288.82/4
exams[is.na(exams)] <- 0
swap <- exams %>% mutate(       replace_1 = (final + exam2 + exam3 + final)/4,
replace_2 = (exam1 + final + exam3 + final)/4,
replace_3 = (exam1 + exam2 + final + final)/4,
swap_average = pmax(Original_Average, replace_1, replace_2, replace_3),
howd_it_help = (swap_average - Original_Average))
write.csv(swap, "s2_examSwap.csv")
tests <- read_csv("/Users/brentscott/Downloads/KIN110-SEC01 FA19 Grades-20191222_2242-comma_separated.csv", na = c("-", " ", "", "NA"))
tests <- read_csv("/Users/brentscott/Downloads/KIN110-SEC01 FA19 Grades-20191222_2242-comma_separated.csv", na = c("-", " ", "", "NA"))
exams <- tibble("ID number" = tests$`ID number`,
exam1 = (tests$`Quiz:Exam 1_TEAM Qs 1-10 (Real)` + tests$`Quiz:Exam 1- INDIVIDUAL Qs 11-50 (Real)`) * 2,
exam2 = parse_number(tests$`Quiz:Exam 2 (Percentage)`),
exam3 = parse_number(tests$`Quiz:Exam 3 (Percentage)`),
final = parse_number(tests$`Quiz:Final Exam (Percentage)`),
Original_Average = rowMeans(exams[2:5]))
exams <- tibble("ID number" = tests$`ID number`,
exam1 = (tests$`Quiz:Exam 1_TEAM Qs 1-10 (Real)` + tests$`Quiz:Exam 1- INDIVIDUAL Qs 11-50 (Real)`) * 2,
exam2 = parse_number(tests$`Quiz:Exam 2 (Percentage)`),
exam3 = parse_number(tests$`Quiz:Exam 3 (Percentage)`),
final = parse_number(tests$`Quiz:Final Exam (Percentage)`))
exams <- tibble("ID number" = tests$`ID number`,
exam1 = (tests$`Quiz:Exam 1_TEAM Qs 1-10 (Real)` + tests$`Quiz:Exam 1- INDIVIDUAL Qs 11-50 (Real)`) * 2,
exam2 = parse_number(tests$`Quiz:Exam 2 (Percentage)`),
exam3 = parse_number(tests$`Quiz:Exam 3 (Percentage)`),
final = parse_number(tests$`Quiz:Final Exam (Percentage)`),
Original_Average = rowMeans(exams[2:5]))
exams[is.na(exams)] <- 0
swap <- exams %>% mutate(       replace_1 = (final + exam2 + exam3 + final)/4,
replace_2 = (exam1 + final + exam3 + final)/4,
replace_3 = (exam1 + exam2 + final + final)/4,
swap_average = pmax(Original_Average, replace_1, replace_2, replace_3),
howd_it_help = (swap_average - Original_Average))
write.csv(swap, "s1_examSwap.csv")
(9.56 x 55) + (5 x 160) - (4.68 x 18) + 655
(9.56 * 55) + (5 x 160) - (4.68 * 18) + 655
(9.56 * 55) + (5 * 160) - (4.68 * 18) + 655
shiny::runApp('inst/shiny')
install.packages(rdrop2)
install.packages("rdrop2")
options(gargle_oauth_cache = ".secrets",
gargle_oath_email = "bdscott@umass.edu")
library(googledrive)
drive_auth(cache = ".secrets", email = "bdscott@umass.edu")
drive_auth(cache = here::here(".secrets"), email = "bdscott@umass.edu")
options(gargle_oob_default = TRUE)
drive_auth(cache = here::here(".secrets"), email = "bdscott@umass.edu")
drive_auth(cache = ".secrets", email = "bdscott@umass.edu")
install.packages(c("colourpicker", "dygraphs", "gridExtra", "gtools", "plotrix", "pracma", "shinyFiles", "shinymanager", "shinythemes", "zoo"))
options(gargle_oob_default = TRUE)
drive_auth(cache = ".secrets", email = "bdscott@umass.edu")
gargle_oath_cache()
gargle::gargle_oath_cache()
gargle::gargle_oauth_cache()
library(shiny); runApp('~/Desktop/driveShiny.R')
list.files(".secrets/")
getwd()
Sys.which("git")
writeLines(strsplit(Sys.getenv("PATH"), ";")[[1]])
library(biophysr)
library(biophysr)
library(biophysr)
library(biophysr)
library(biophysr)
library(biophysr)
library(biophysr)
library(biophysr)
library(biophysr)
library(biophysr)
library(biophysr)
library(biophysr)
library(biophysr)
library(biophysr)
library(biophysr)
library(biophysr)
library(biophysr)
