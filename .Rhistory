dyUnzoom()
"),
paste0(read_directions$folder[[folder]],
"/results/",
read_directions$condition[[folder]],
"_",
read_directions$folder[[folder]],
"_dygraph.R")
)
## PLOT OVERLAY ##
writeLines("Plotting Hmm Overlay...")
if(length(processed_data)/5000 > 41){
plot1 <- ggplot()+
geom_line(aes(x = (1:dp2plot)/5000, y = flip_raw[1:dp2plot]))+
geom_line(aes(x = (1:dp2plot)/5000, y = overlay[1:dp2plot]), color = overlay_color,  size = 0.75)+
xlab("")+
ylab("nm")+
ggtitle(paste0(read_directions$condition[[folder]],
"_",
read_directions$folder[[folder]]))+
theme_bw()
plot2 <- ggplot()+
geom_line(aes(x = (dp2plot:(2*dp2plot))/5000, y = flip_raw[dp2plot:(2*dp2plot)]))+
geom_line(aes(x = (dp2plot:(2*dp2plot))/5000, y = overlay[dp2plot:(2*dp2plot)]), color = overlay_color,  size = 0.75)+
xlab("")+
ylab("nm")+
theme_bw()
plot3 <- ggplot()+
geom_line(aes(x = ((2*dp2plot):(3*dp2plot))/5000, y = flip_raw[(2*dp2plot):(3*dp2plot)]))+
geom_line(aes(x = ((2*dp2plot):(3*dp2plot))/5000, y = overlay[(2*dp2plot):(3*dp2plot)]), color = overlay_color,  size = 0.75)+
xlab("")+
ylab("nm")+
theme_bw()
plot4 <- ggplot()+
geom_line(aes(x = ((3*dp2plot):(4*dp2plot))/5000, y = flip_raw[(3*dp2plot):(4*dp2plot)]))+
geom_line(aes(x = ((3*dp2plot):(4*dp2plot))/5000, y = overlay[(3*dp2plot):(4*dp2plot)]), color = overlay_color, size = 0.75)+
xlab("Seconds")+
ylab("nm")+
theme_bw()
overlay_plots  <- arrangeGrob(plot1, plot2, plot3, plot4, ncol = 1)
ggsave(paste0(read_directions$folder[[folder]],
"/results/",
read_directions$condition[[folder]],
"_",
read_directions$folder[[folder]], "_hmm_overlay_plot.png"), overlay_plots, width = 12)
} else if(length(processed_data)/5000 < 41 & length(processed_data)/5000 > 21){
plot1 <- ggplot()+
geom_line(aes(x = (1:dp2plot)/5000, y = flip_raw[1:dp2plot]))+
geom_line(aes(x = (1:dp2plot)/5000, y = overlay[1:dp2plot]), color = overlay_color,  size = 0.75)+
xlab("")+
ylab("nm")+
ggtitle(paste0(read_directions$condition[[folder]],
"_",
read_directions$folder[[folder]]))+
theme_bw()
plot2 <- ggplot()+
geom_line(aes(x = (dp2plot:(2*dp2plot))/5000, y = flip_raw[dp2plot:(2*dp2plot)]))+
geom_line(aes(x = (dp2plot:(2*dp2plot))/5000, y = overlay[dp2plot:(2*dp2plot)]), color = overlay_color,  size = 0.75)+
xlab("Seconds")+
ylab("nm")+
theme_bw()
overlay_plots  <- arrangeGrob(plot1, plot2, plot3, plot4, ncol = 1)
ggsave(paste0(read_directions$folder[[folder]],
"/results/",
read_directions$condition[[folder]],
"_",
read_directions$folder[[folder]], "_hmm_overlay_plot.png"), overlay_plots, width = 12)
} else {
plot1 <- ggplot()+
geom_line(aes(x = (1:25000)/5000, y = flip_raw[1:dp2plot]))+
geom_line(aes(x = (1:25000)/5000, y = overlay[1:dp2plot]), color = overlay_color,  size = 0.75)+
xlab("")+
ylab("nm")+
ggtitle(paste0(read_directions$condition[[folder]],
"_",
read_directions$folder[[folder]]))+
theme_bw()
ggsave(paste0(read_directions$folder[[folder]],
"/results/",
read_directions$condition[[folder]],
"_",
read_directions$folder[[folder]], "_hmm_overlay_plot.png"), plot1, width = 12)
}
#render to HTML
writeLines("Render to HTML")
rmarkdown::render(paste0(parent_dir,
"/",
read_directions$folder[[r]],
"/results/",
read_directions$condition[[r]],
"_",
read_directions$folder[[r]],
"_dygraph.R"))
read_directions <- suppressMessages(read_csv(directions)) %>%
mutate(folder = observation_folders,
grouped_file = grouped4r_files) %>%
filter(include == "yes")
read_directions <- suppressMessages(read_csv(directions)) %>%
mutate(folder = observation_folders,
grouped_file = grouped4r_files) %>%
filter(obs == 3)
rmarkdown::render(paste0(parent_dir,
"/",
read_directions$folder[[r]],
"/results/",
read_directions$condition[[r]],
"_",
read_directions$folder[[r]],
"_dygraph.R"))
read_directions <- suppressMessages(read_csv(directions)) %>%
mutate(folder = observation_folders,
grouped_file = grouped4r_files) %>%
filter(obs == 3)
#make dygraph .R file
writeLines(c(
"#+ echo=FALSE",
paste0("parent_dir <- ","'", parent_dir, "'"),
paste0("obs <- ", "'", read_directions$folder[[folder]], "'"),
paste0("run_mean_color <- ", "'",overlay_color, "'"),
"
#+ echo=FALSE, fig.width = 10, fig.height = 4
setwd(parent_dir)
library(tidyverse)
library(dygraphs)
library(rmarkdown)
directions <- list.files(pattern = 'directions.csv')
observation_folders <- list.files(pattern = 'obs')
read_directions <- suppressMessages(read_csv(directions)) %>%
mutate(folder = observation_folders)%>%
filter(include == 'yes')
setwd(paste0(parent_dir, '/', obs, '/results'))
dg_dat <- list.files(pattern = 'dygraph_data.RData')
load(dg_dat)
d <- data.frame(index = 1:length(dygraph_master_list$run_mean),
raw = dygraph_master_list$raw_data[1:length(dygraph_master_list$run_mean)],
run = dygraph_master_list$run_mean
)
events <- dygraph_master_list$final_events
peak_nm_index = dygraph_master_list$peak_nm_index
periods_df <- data.frame(start = dygraph_master_list$periods$state_2_start,
stop = dygraph_master_list$periods$state_2_stop)
add_shades <- function(x, periods, ...){
for(p in 1:nrow(periods)){
x <- dyShading(x, from = periods$start[[p]], to = periods$stop[[p]], ...)
}
x
}
add_labels <- function(x, events, ...){
for(event in 1:length(peak_nm_index)){
x <- dyEvent(x, peak_nm_index[[event]], paste(round(events$time_on_ms[[event]], digits = 1), 'ms,', round(events$force[[event]], digits = 2), 'pN'), ...)
}
x
}
dygraph(d) %>%
dySeries('raw', color = '#242424', strokeWidth = 2) %>%
dySeries('run', color = run_mean_color,  strokeWidth = 2) %>%
dyRangeSelector() %>%
add_shades(periods_df, color = 'lightpink') %>%
add_labels(events, labelLoc = 'bottom') %>%
dyAxis('x', drawGrid = FALSE) %>%
dyUnzoom()
"),
paste0(read_directions$folder[[folder]],
"/results/",
read_directions$condition[[folder]],
"_",
read_directions$folder[[folder]],
"_dygraph.R")
)
rmarkdown::render(paste0(parent_dir,
"/",
read_directions$folder[[r]],
"/results/",
read_directions$condition[[r]],
"_",
read_directions$folder[[r]],
"_dygraph.R"))
library(biophysr)
parent_dir <- "/Users/brentscott/trap_data/project_dATPdrug/pH7.4_pCa7_dATP_Drug/111319/observations"
mv2nm <- 31
nm2pn <- 0.04
overlay_color <- "#0073DF"
hidden_markov_analysis(parent_dir, mv2nm, nm2pn, "#0073DF")
warnings()
folder <- 13
#make dygraph .R file
writeLines(c(
"#+ echo=FALSE",
paste0("parent_dir <- ","'", parent_dir, "'"),
paste0("obs <- ", "'", read_directions$folder[[folder]], "'"),
paste0("run_mean_color <- ", "'",overlay_color, "'"),
"
#+ echo=FALSE, fig.width = 10, fig.height = 4
setwd(parent_dir)
library(tidyverse)
library(dygraphs)
library(rmarkdown)
directions <- list.files(pattern = 'directions.csv')
observation_folders <- list.files(pattern = 'obs')
read_directions <- suppressMessages(read_csv(directions)) %>%
mutate(folder = observation_folders)%>%
filter(include == 'yes')
setwd(paste0(parent_dir, '/', obs, '/results'))
dg_dat <- list.files(pattern = 'dygraph_data.RData')
load(dg_dat)
d <- data.frame(index = (1:length(dygraph_master_list$run_mean)/5000),
raw = dygraph_master_list$raw_data[1:length(dygraph_master_list$run_mean)],
run = dygraph_master_list$run_mean
)
events <- dygraph_master_list$final_events
peak_nm_index = dygraph_master_list$peak_nm_index
periods_df <- data.frame(start = dygraph_master_list$periods$state_2_start,
stop = dygraph_master_list$periods$state_2_stop)
add_shades <- function(x, periods, ...){
for(p in 1:nrow(periods)){
x <- dyShading(x, from = periods$start[[p]], to = periods$stop[[p]], ...)
}
x
}
add_labels <- function(x, events, ...){
for(event in 1:length(peak_nm_index)){
x <- dyEvent(x, peak_nm_index[[event]], paste(round(events$time_on_ms[[event]], digits = 1), 'ms,', round(events$force[[event]], digits = 2), 'pN'), ...)
}
x
}
dygraph(d) %>%
dySeries('raw', color = '#242424', strokeWidth = 2) %>%
dySeries('run', color = run_mean_color,  strokeWidth = 2) %>%
dyRangeSelector() %>%
add_shades(periods_df, color = 'lightpink') %>%
add_labels(events, labelLoc = 'bottom') %>%
dyAxis('x', drawGrid = FALSE) %>%
dyUnzoom()
"),
paste0(read_directions$folder[[folder]],
"/results/",
read_directions$condition[[folder]],
"_",
read_directions$folder[[folder]],
"_dygraph.R")
)
r <- 13
read_directions <- suppressMessages(read_csv(directions)) %>%
mutate(folder = observation_folders,
grouped_file = grouped4r_files) %>%
filter(include == "yes")
#make dygraph .R file
writeLines(c(
"#+ echo=FALSE",
paste0("parent_dir <- ","'", parent_dir, "'"),
paste0("obs <- ", "'", read_directions$folder[[folder]], "'"),
paste0("run_mean_color <- ", "'",overlay_color, "'"),
"
#+ echo=FALSE, fig.width = 10, fig.height = 4
setwd(parent_dir)
library(tidyverse)
library(dygraphs)
library(rmarkdown)
directions <- list.files(pattern = 'directions.csv')
observation_folders <- list.files(pattern = 'obs')
read_directions <- suppressMessages(read_csv(directions)) %>%
mutate(folder = observation_folders)%>%
filter(include == 'yes')
setwd(paste0(parent_dir, '/', obs, '/results'))
dg_dat <- list.files(pattern = 'dygraph_data.RData')
load(dg_dat)
d <- data.frame(index = (1:length(dygraph_master_list$run_mean)/5000),
raw = dygraph_master_list$raw_data[1:length(dygraph_master_list$run_mean)],
run = dygraph_master_list$run_mean
)
events <- dygraph_master_list$final_events
peak_nm_index = dygraph_master_list$peak_nm_index
periods_df <- data.frame(start = dygraph_master_list$periods$state_2_start,
stop = dygraph_master_list$periods$state_2_stop)
add_shades <- function(x, periods, ...){
for(p in 1:nrow(periods)){
x <- dyShading(x, from = periods$start[[p]], to = periods$stop[[p]], ...)
}
x
}
add_labels <- function(x, events, ...){
for(event in 1:length(peak_nm_index)){
x <- dyEvent(x, peak_nm_index[[event]], paste(round(events$time_on_ms[[event]], digits = 1), 'ms,', round(events$force[[event]], digits = 2), 'pN'), ...)
}
x
}
dygraph(d) %>%
dySeries('raw', color = '#242424', strokeWidth = 2) %>%
dySeries('run', color = run_mean_color,  strokeWidth = 2) %>%
dyRangeSelector() %>%
add_shades(periods_df, color = 'lightpink') %>%
add_labels(events, labelLoc = 'bottom') %>%
dyAxis('x', drawGrid = FALSE) %>%
dyUnzoom()
"),
paste0(read_directions$folder[[folder]],
"/results/",
read_directions$condition[[folder]],
"_",
read_directions$folder[[folder]],
"_dygraph.R")
)
rmarkdown::render(paste0(parent_dir,
"/",
read_directions$folder[[r]],
"/results/",
read_directions$condition[[r]],
"_",
read_directions$folder[[r]],
"_dygraph.R"))
read_directions <- suppressMessages(read_csv(directions)) %>%
mutate(folder = observation_folders,
grouped_file = grouped4r_files) %>%
filter(include == "yes")
folder <- 13
r <- 13
#make dygraph .R file
writeLines(c(
"#+ echo=FALSE",
paste0("parent_dir <- ","'", parent_dir, "'"),
paste0("obs <- ", "'", read_directions$folder[[folder]], "'"),
paste0("run_mean_color <- ", "'",overlay_color, "'"),
"
#+ echo=FALSE, fig.width = 10, fig.height = 4
setwd(parent_dir)
library(tidyverse)
library(dygraphs)
library(rmarkdown)
directions <- list.files(pattern = 'directions.csv')
observation_folders <- list.files(pattern = 'obs')
read_directions <- suppressMessages(read_csv(directions)) %>%
mutate(folder = observation_folders)%>%
filter(include == 'yes')
setwd(paste0(parent_dir, '/', obs, '/results'))
dg_dat <- list.files(pattern = 'dygraph_data.RData')
load(dg_dat)
d <- data.frame(index = (1:length(dygraph_master_list$run_mean)/5000),
raw = dygraph_master_list$raw_data[1:length(dygraph_master_list$run_mean)],
run = dygraph_master_list$run_mean
)
events <- dygraph_master_list$final_events
peak_nm_index = dygraph_master_list$peak_nm_index/5000
periods_df <- data.frame(start = dygraph_master_list$periods$state_2_start/5000,
stop = dygraph_master_list$periods$state_2_stop/5000)
add_shades <- function(x, periods, ...){
for(p in 1:nrow(periods)){
x <- dyShading(x, from = periods$start[[p]], to = periods$stop[[p]], ...)
}
x
}
add_labels <- function(x, events, ...){
for(event in 1:length(peak_nm_index)){
x <- dyEvent(x, peak_nm_index[[event]], paste(round(events$time_on_ms[[event]], digits = 1), 'ms,', round(events$force[[event]], digits = 2), 'pN'), ...)
}
x
}
dygraph(d) %>%
dySeries('raw', color = '#242424', strokeWidth = 2) %>%
dySeries('run', color = run_mean_color,  strokeWidth = 2) %>%
dyRangeSelector() %>%
add_shades(periods_df, color = 'lightpink') %>%
add_labels(events, labelLoc = 'bottom') %>%
dyAxis('x', drawGrid = FALSE) %>%
dyUnzoom()
"),
paste0(read_directions$folder[[folder]],
"/results/",
read_directions$condition[[folder]],
"_",
read_directions$folder[[folder]],
"_dygraph.R")
)
rmarkdown::render(paste0(parent_dir,
"/",
read_directions$folder[[r]],
"/results/",
read_directions$condition[[r]],
"_",
read_directions$folder[[r]],
"_dygraph.R"))
writeLines("Saving HMM Summary")
read_directions <- suppressMessages(read_csv(directions)) %>%
mutate(folder = observation_folders,
grouped_file = grouped4r_files) %>%
filter(include == "yes")
folder <- 13
dir.create(path = paste0(read_directions$folder[[folder]], "/", "results"))
#Load data and convert mV to nm
dat <- read.delim(read_directions$grouped_file[[folder]], header = FALSE) %>%
mutate(nm_converted = V1*mv2nm) %>%
dplyr::pull(nm_converted)
processed_data <- if(read_directions$detrend[[folder]] == "yes"){
break_pts <- seq(25000, length(dat), by = 25000)
pracma::detrend(dat, tt = "linear", bp = break_pts)
} else if(read_directions$detrend[[folder]] == "no"){
get_mean <- mean(dat[read_directions$baseline_start_sec[[folder]] : read_directions$baseline_stop_sec[[folder]]])
dat - get_mean
}
## RUNNING MEAN & VAR ##
writeLines("Calculating Running Mean")
run_mean <- running(processed_data, fun = mean, width = 150, by = 75)
writeLines("Calculating Running Variance")
run_var <- running(processed_data, fun = var, width = 150, by = 75)
running_table <- data.frame(run_mean = run_mean,
run_var = run_var)
## HMM ##
writeLines("Fitting HMM")
seed <- floor(runif(1, 0, 1e6))
hmm <- depmix(list(run_var~1,
run_mean~1),
data = running_table,
nstates = 2,
family = list(gaussian(),
gaussian()))
sd_run_mean <- sd(run_mean)
mean_run_var <- mean(run_var)
sd_run_var <- sd(run_var)
estimate_hmm_gaussians <- c(mean_run_var, sd_run_var, 0, sd_run_mean,
mean_run_var/2, sd_run_var/2, 7, sd_run_mean)
hmm <- setpars(hmm, c(hmm_initial_parameters, estimate_hmm_gaussians))
set.seed(seed)
hmm_fit <- fit(hmm)
hmm_posterior <- posterior(hmm_fit)
hmm_repeat <- 0
while(hmm_repeat < 10){
if(hmm_posterior$state[[1]] == 1){
writeLines("HMM starts in state 1")
hmm_repeat <- 11
} else if(hmm_posterior$state[[1]] == 2){
writeLines(paste("Refitting HMM", hmm_repeat))
seed <- floor(runif(1, 0, 1e6))
set.seed(seed)
hmm_fit <- fit(hmm)
hmm_posterior <- posterior(hmm_fit)
hmm_repeat <- hmm_repeat + 1
}
}
writeLines("Saving HMM Summary")
sink(paste0(read_directions$folder[[folder]],
"/results/",
read_directions$condition[[folder]],
"_",
read_directions$folder[[folder]],
"_", "hmm_summary.txt"))
writeLines(c(summary(hmm_fit),"
",
paste("set.seed =", seed)))
sink()
writeLines("Saving HMM Summary")
sink(paste0(read_directions$folder[[folder]],
"/results/",
read_directions$condition[[folder]],
"_",
read_directions$folder[[folder]],
"_", "hmm_summary.txt"))
writeLines(c(summary(hmm_fit),
paste("set.seed =", seed)))
sink()
sink(paste0(read_directions$folder[[folder]],
"/results/",
read_directions$condition[[folder]],
"_",
read_directions$folder[[folder]],
"_", "hmm_summary.txt"))
writeLines(summary(hmm_fit))
writeLines(paste(summary(hmm_fit)))
#paste("set.seed =", seed)))
sink()
sink(paste0(read_directions$folder[[folder]],
"/results/",
read_directions$condition[[folder]],
"_",
read_directions$folder[[folder]],
"_", "hmm_summary.txt"))
writeLines(paste(summary(hmm_fit)))
#paste("set.seed =", seed)))
sink()
sink(paste0(read_directions$folder[[folder]],
"/results/",
read_directions$condition[[folder]],
"_",
read_directions$folder[[folder]],
"_", "hmm_summary.txt"))
summary(hmm_fit)
#writeLines(
#paste("set.seed =", seed)))
sink()
sink(paste0(read_directions$folder[[folder]],
"/results/",
read_directions$condition[[folder]],
"_",
read_directions$folder[[folder]],
"_", "hmm_summary.txt"))
summary(hmm_fit)
paste("set.seed =", seed)
sink()
sink(paste0(read_directions$folder[[folder]],
"/results/",
read_directions$condition[[folder]],
"_",
read_directions$folder[[folder]],
"_", "hmm_summary.txt"))
summary(hmm_fit)
paste("",
"set.seed =", seed)
sink()
?paste
?writeLines
?writeChar
library(biophysr)
library(biophysr)
library(biophysr)
